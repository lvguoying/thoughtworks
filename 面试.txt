1.列举常见的es6新特性:
    给我们带来了更甜的语法糖(一种语法,使得语言更容易理解和更具有可读性,也让我们编写代码更加简单快捷)
    let const 箭头函数 class .....  我们需要通过bable进行转换为CommonJS这种模块化标准的语法。
    定义函数:不需要function也能定义breathe函数。
    
    创建类:---
    
    模块:支持module。将不同功能的代码分别写在不同文件中,各模块只需导出(export)公共接口部分,然后在需要使用的地方通过
    模块的导入(import)就可以了。

    模板字符串:

    解构:   (默认参数)
2.箭头函数this指向:
    函数体内的this对象,就是定义时所在的对象,而不是使用时所在的对象--不可以当做构造函数,也就是说
    不可以使用new命令,否则会抛出一个错误。
3.手写es6 class 继承:
4.promise的状态,链式调用,同步异步流程,唯一性:
5.set去重:
    let array = [1,1,1,1,2,3,4,4,5,3];
    let set = new Set(array);
    console.log(set);
    输出结果为: Set{1,2,3,4,5}

    Array.from:可以把类数组的对象转换为数组。
6.设置属性默认值:


7.闭包:官方解释-->一个拥有许多变量和绑定了这些变量的环境表达式,因而这些变量也是该表达式的一部分。
        特点:1.作为一个函数变量的一个引用,当函数返回时,其处于激活状态。
            2.一个闭包就是当一个函数返回时,一个没有释放资源的栈区。

8.作用域和作用域链:

9.隐式转换:(js是弱类型语言)
    3 + true // --> 4
    --------------
    2 + 5 // --> 5
    'hello' + 'world' // --> 'hello world'
    --------------
    字符串和数字相加结果是字符串
    字符串和数字相加结果是字符串
    字符串和数字相加结果是字符串
    --------------
    1 + 2 + '3' // --> '33'
    1 + '2' + 3 // --> '123'     
    --------------
    NAN 和 NAN 是不相等的(由于浮点数的精确的决定的)
10.列举常用字符串操作方法:
    str1.toLowerCase()  //转换为小写
    str1.concat(str2)   //字符串拼接
    str1.indexOf("zeng") // 第一个zeng出现的位置
    str1.lastIndexOf("h") // 最后一个h出现的位置
    str1.substring(2)	// 提取子字符串,从2开始
    str1.substring(2,6)	// 提取子字符串,从2开始到6结束
    str1.trim()			// 忽略字符串前后空格
    String[] printWord = new String[100];
    printWord = str1.split(" ");		// 字符串拆分
    /*StringBuffer（该类比String更加高效）中的一些字符串处理方法*/
    StringBuffer strb = new StringBuffer("青春无悔");
    strb.append("jiaozl");
    str1 = strb.toString();
    strb.insert(strb.length()-3, ",");
11.列举常用的5个数组操作方法:
    1、push 在数组末尾添加一个或多个元素,并返回数组的长度, 可以添加任意类型的值作为数组的一个元素。
    2、unshift 在最前面添加一个或多个元素,并返回数组的长度,可以添加任意类型的值作为数组的一个元素。
    3、pop 删除最后一个元素,并返回删除元素的值；如果数组为空则返回undefine。该方法会改变原始数组。
    4、shift 删除数组第一个元素,并返回被删除的元素;如果数组为空则返回undefine。该方法会改变原始数组。
    5、slice截取数组,得到截取的数组;不改变原始数组,得到新的数组.与String的substring()方法类似.
    6、splice剪接数组,向/从数组中添加/删除项目,然后返回被删除的项目,该方法会改变原始数组,索引从0开始.

        var arr = [1,2,3,4,5];   //以下注释结果分别对数组arr进行操作

        arr.splice(1);   // arr:[1]; 返回值为数组[2,3,4,5]

        arr.splice(1, 2);    // arr:[1, 4, 5]; 返回值为数组[2,3]

        arr.splice(1, 0, 'A');   // arr:[1, "A",2,3, 4, 5]; 未删除元素,返回值为空数组[]

        arr.splice(1, 2, 'A', 'B');   // arr:[1, "A", "B", 4, 5]; 返回值为数组：[2,3]
    7、concat 合并两个或多个数组,得到新数组,原始数组不改变,如果要进行concat()操作的参数是数组,
    那么添加的是数组中的元素,而不是数组。
    8、indexOf 数组元素索引,并返回元素索引,不存在返回-1,索引从0开始.

    10、reverse 颠倒数组中元素的顺序，该方法会改变原来的数组，而不会创建新的数组
12.浅拷贝和深拷贝区别:

